import { Endpoint, HttpResponse } from '../../clients';
import { GetIdCommandInput as GetIdInput, GetIdCommandOutput as GetIdOutput } from './types';
export type { GetIdInput, GetIdOutput };
/**
 * @internal
 */
export declare const getId: (config: Omit<import("../../clients/middleware/userAgent").UserAgentOptions & import("../../clients/middleware/retry").RetryOptions<HttpResponse> & import("../../clients").ServiceClientOptions, "retryDecider" | "computeDelay" | "userAgentValue" | "endpointResolver"> & {
    retryDecider?: (response?: HttpResponse, error?: unknown) => Promise<boolean>;
    computeDelay?: (attempt: number) => number;
    userAgentValue?: string;
    endpointResolver?: (options: import("../../clients").EndpointResolverOptions) => Endpoint;
}, input: GetIdInput) => Promise<GetIdOutput>;
