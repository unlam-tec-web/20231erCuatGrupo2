import { Endpoint, HttpResponse } from '../../clients/types';
import type { UpdateEndpointCommandInput as UpdateEndpointInput, UpdateEndpointCommandOutput as UpdateEndpointOutput } from './types';
export type { UpdateEndpointInput, UpdateEndpointOutput };
/**
 * @internal
 */
export declare const updateEndpoint: (config: Omit<import("../../clients/middleware/userAgent").UserAgentOptions & import("../../clients/middleware/retry").RetryOptions<HttpResponse> & import("../../clients/middleware/signing").SigningOptions & import("../../clients/types").ServiceClientOptions, "retryDecider" | "computeDelay" | "userAgentValue" | "service" | "endpointResolver"> & {
    retryDecider?: (response?: HttpResponse, error?: unknown) => Promise<boolean>;
    computeDelay?: (attempt: number) => number;
    userAgentValue?: string;
    service?: string;
    endpointResolver?: (options: import("../../clients/types").EndpointResolverOptions) => Endpoint;
}, input: UpdateEndpointInput) => Promise<UpdateEndpointOutput>;
